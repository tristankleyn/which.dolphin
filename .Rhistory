lines(f, y, col=rgb(0,0,0,0.5))
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.30))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,200)
for (i in f) {
y <- append(y, sum(x >= i & x < i+200)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
generateCall <- function() {
freqs <- c()
f0 <- sample(2000:5000, 1)
spr0 <- sample(200:400, 1)
skw0 <- runif(1, -1, 1)
att <- runif(1, 1, 4)
n <- 1000
dur <- runif(1, 100, 600)
samples <- as.integer(dur/20)
nHarm <- 3
for (i in 1:nHarm) {
x <- rnorm(n)
f <- f0*i
spr <- spr0*i
skw <- skw0
if (skw > 0) {
skewed_x <- x * exp(skw * x)  # Right skew
} else {
skewed_x <- -(-x * exp(abs(skw) * -x))  # Left skew
}
x <- scale(skewed_x) * spr + f
freqs <- append(freqs, sample(x, samples))
samples <- samples/att
}
return(freqs)
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.30))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,200)
for (i in f) {
y <- append(y, sum(x >= i & x < i+200)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.80))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,200)
for (i in f) {
y <- append(y, sum(x >= i & x < i+200)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
generateCall <- function() {
freqs <- c()
f0 <- sample(2000:5000, 1)
spr0 <- sample(200:400, 1)
skw0 <- runif(1, -1, 1)
att <- runif(1, 1, 4)
n <- 1000
dur <- runif(1, 100, 600)
samples <- as.integer(dur/20)
nHarm <- 3
for (i in 1:nHarm) {
x <- rnorm(n)
f <- f0*i
spr <- spr0*i
skw <- skw0
if (skw > 0) {
skewed_x <- x * exp(skw * x)  # Right skew
} else {
skewed_x <- -(-x * exp(abs(skw) * -x))  # Left skew
}
x <- scale(skewed_x) * spr + f
freqs <- append(freqs, sample(x, samples))
samples <- samples/att
}
return(freqs)
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.80))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,200)
for (i in f) {
y <- append(y, sum(x >= i & x < i+200)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.80))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,200)
for (i in f) {
y <- append(y, sum(x >= i & x < i+200)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
generateCall <- function() {
freqs <- c()
f0 <- sample(2000:5000, 1)
spr0 <- sample(200:400, 1)
skw0 <- runif(1, -1, 1)
att <- runif(1, 1, 4)
n <- 1000
dur <- runif(1, 100, 600)
samples <- as.integer(dur/20)
nHarm <- 3
for (i in 1:nHarm) {
x <- rnorm(n)
f <- f0*i
spr <- spr0*i
skw <- skw0
if (skw > 0) {
skewed_x <- x * exp(skw * x)  # Right skew
} else {
skewed_x <- -(-x * exp(abs(skw) * -x))  # Left skew
}
x <- scale(skewed_x) * spr + f
freqs <- append(freqs, sample(x, samples))
samples <- samples/att
}
return(freqs)
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.80))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,200)
for (i in f) {
y <- append(y, sum(x >= i & x < i+200)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
write.table(t(d), file = 'I:/synManateeCalls.csv', sep=',', row.names=FALSE)
write.table(d, file = 'I:/synManateeCalls.csv', sep=',', row.names=FALSE)
generateCall <- function() {
freqs <- c()
f0 <- sample(2000:5000, 1)
spr0 <- sample(200:400, 1)
skw0 <- runif(1, -1, 1)
att <- runif(1, 1, 4)
n <- 1000
dur <- runif(1, 100, 600)
samples <- as.integer(dur/20)
nHarm <- 3
for (i in 1:nHarm) {
x <- rnorm(n)
f <- f0*i
spr <- spr0*i
skw <- skw0
if (skw > 0) {
skewed_x <- x * exp(skw * x)  # Right skew
} else {
skewed_x <- -(-x * exp(abs(skw) * -x))  # Left skew
}
x <- scale(skewed_x) * spr + f
freqs <- append(freqs, sample(x, samples))
samples <- samples/att
}
return(freqs)
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.80))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,100)
for (i in f) {
y <- append(y, sum(x >= i & x < i+100)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
y
length(y)
write.table(d, file = 'I:/synManateeCalls.csv', sep=',', row.names=FALSE)
write.table(d, file = 'I:/synManateeCalls.csv', sep=',', row.names=FALSE)
generateCall <- function() {
freqs <- c()
f0 <- sample(2000:5000, 1)
spr0 <- sample(200:400, 1)
skw0 <- runif(1, -1, 1)
att <- runif(1, 1, 4)
n <- 1000
dur <- runif(1, 100, 600)
samples <- as.integer(dur/20)
nHarm <- 3
for (i in 1:nHarm) {
x <- rnorm(n)
f <- f0*i
spr <- spr0*i
skw <- skw0
if (skw > 0) {
skewed_x <- x * exp(skw * x)  # Right skew
} else {
skewed_x <- -(-x * exp(abs(skw) * -x))  # Left skew
}
x <- scale(skewed_x) * spr + f
freqs <- append(freqs, sample(x, samples))
samples <- samples/att
}
return(freqs)
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.80))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,100)
for (i in f) {
y <- append(y, sum(x >= i & x < i+100)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
write.table(d, file = 'I:/synManateeCalls.csv', sep=',', row.names=FALSE)
generateCall <- function() {
freqs <- c()
f0 <- sample(2000:5000, 1)
spr0 <- sample(200:400, 1)
skw0 <- runif(1, -1, 1)
att <- runif(1, 1, 4)
n <- 1000
dur <- runif(1, 100, 600)
samples <- as.integer(dur/20)
nHarm <- 3
for (i in 1:nHarm) {
x <- rnorm(n)
f <- f0*i
spr <- spr0*i
skw <- skw0
if (skw > 0) {
skewed_x <- x * exp(skw * x)  # Right skew
} else {
skewed_x <- -(-x * exp(abs(skw) * -x))  # Left skew
}
x <- scale(skewed_x) * spr + f
freqs <- append(freqs, sample(x, samples))
samples <- samples/att
}
return(freqs)
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.80))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,100)
for (i in f) {
y <- append(y, sum(x >= i & x < i+100)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
write.table(d, file = 'I:/synManateeCalls.csv', sep=',', row.names=FALSE)
(y)
generateCall <- function() {
freqs <- c()
f0 <- sample(2000:5000, 1)
spr0 <- sample(200:400, 1)
skw0 <- runif(1, -1, 1)
att <- runif(1, 1, 4)
n <- 1000
dur <- runif(1, 100, 600)
samples <- as.integer(dur/20)
nHarm <- 3
for (i in 1:nHarm) {
x <- rnorm(n)
f <- f0*i
spr <- spr0*i
skw <- skw0
if (skw > 0) {
skewed_x <- x * exp(skw * x)  # Right skew
} else {
skewed_x <- -(-x * exp(abs(skw) * -x))  # Left skew
}
x <- scale(skewed_x) * spr + f
freqs <- append(freqs, sample(x, samples))
samples <- samples/att
}
return(freqs)
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.80))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,100)
for (i in f) {
y <- append(y, sum(x >= i & x < i+100)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
write.table(d, file = 'I:/synManateeCalls.csv', sep=',', row.names=FALSE)
(y)
generateCall <- function() {
freqs <- c()
f0 <- sample(2000:5000, 1)
spr0 <- sample(200:400, 1)
skw0 <- runif(1, -1, 1)
att <- runif(1, 1, 4)
n <- 1000
dur <- runif(1, 100, 600)
samples <- as.integer(dur/20)
nHarm <- 3
for (i in 1:nHarm) {
x <- rnorm(n)
f <- f0*i
spr <- spr0*i
skw <- skw0
if (skw > 0) {
skewed_x <- x * exp(skw * x)  # Right skew
} else {
skewed_x <- -(-x * exp(abs(skw) * -x))  # Left skew
}
x <- scale(skewed_x) * spr + f
freqs <- append(freqs, sample(x, samples))
samples <- samples/att
}
return(freqs)
}
d <- data.frame()
nExamples <- runif(1, 5, 40)
plot(c(0,0,0), c(1,1,1), type='n', xlim=c(2000, 20000), ylim=c(0,0.80))
for (e in 1:nExamples) {
x <- generateCall()
y <- c()
f <- seq(2000,19900,100)
for (i in f) {
y <- append(y, sum(x >= i & x < i+100)/length(x))
}
y <- y/sum(y)
row <- t(data.frame(y))
d <- rbind(d, row)
lines(f, y, col=rgb(0,0,0,0.5))
}
write.table(d, file = 'I:/synManateeCalls.csv', sep=',', row.names=FALSE)
# (1) Set the appropriate working directory
dir_path <- tcltk::tk_choose.dir(caption="Select folder with eventClassifier")
setwd(dir_path)
# (4) Run app
shiny::runApp('eventClassifier')
df <- read.csv('I:/manateeTest/barcodes.csv')
df
dim(df)
df <- read.csv('I:/manateeTest/barcodes.csv')
df
if (nrow(df) > 1) {
pca_result <- prcomp(df, scale. = TRUE)
} else {
pca_result <- prcomp(df, scale. = FALSE)
}
sub <- df[,3:ncol(df)]
sub
sub <- df[,4:ncol(df)]
df <- read.csv('I:/manateeTest/barcodes.csv')
sub <- df[,4:ncol(df)]
if (nrow(sub) > 1) {
pca_result <- prcomp(sub, scale. = TRUE)
} else {
pca_result <- prcomp(sub, scale. = FALSE)
}
pca_result <- data.frame(pca_result$x)
pca_result
df
df <- read.csv('I:/manateeTest/barcodes.csv')
df$label <- c('Manatee', 'Manatee', 'Manatee', 'Manatee', 'HB Dolphin', 'HB Dolphin', 'HB Dolphin', 'HB Dolphin', 'HB Dolphin')
sub <- df[,4:ncol(df)]
if (nrow(sub) > 1) {
pca_result <- prcomp(sub, scale. = TRUE)
} else {
pca_result <- prcomp(sub, scale. = FALSE)
}
pca_result <- data.frame(pca_result$x)
pca_result
df <- read.csv('I:/manateeTest/barcodes.csv')
df$label <- c('Manatee', 'Manatee', 'Manatee', 'Manatee', 'HB Dolphin', 'HB Dolphin', 'HB Dolphin', 'HB Dolphin', 'HB Dolphin')
sub <- df[,4:ncol(df)-1]
if (nrow(sub) > 1) {
pca_result <- prcomp(sub, scale. = TRUE)
} else {
pca_result <- prcomp(sub, scale. = FALSE)
}
pca_result <- data.frame(pca_result$x)
pca_result
pca_result$label <- df$label
ggplot(pca_result, aes(x = PC1, y = PC2, color = label)) +
geom_point(size = 1.5, alpha=0.6) +
stat_ellipse(level = 0.90) +  # 90% confidence ellipse
theme_minimal(base_size = 8) +
theme(legend.text = element_text(size = 8),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
) +
xlab('Component 1') +
ylab('Component 2') +
guides(color = guide_legend(title = "Classified species"))
ggplot(pca_result, aes(x = PC1, y = PC2, color = label)) +
geom_point(size = 1.5, alpha=0.6) +
stat_ellipse(level = 0.90) +  # 90% confidence ellipse
theme_minimal(base_size = 8) +
theme(legend.text = element_text(size = 8),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
) +
xlab('Component 1') +
ylab('Component 2') +
guides(color = guide_legend(title = "Classified species"))
ggplot(pca_result, aes(x = PC1, y = PC2, color = label)) +
geom_point(size = 1.5, alpha=0.6) +
stat_ellipse(level = 0.90) +  # 90% confidence ellipse
theme_minimal(base_size = 8) +
theme(legend.text = element_text(size = 8),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
) +
xlab('Component 1') +
ylab('Component 2') +
guides(color = guide_legend(title = "Classified species"))
ggplot(pca_result, aes(x = PC1, y = PC2, color = label)) +
geom_point(size = 1.5, alpha=0.6) +
stat_ellipse(level = 0.90) +  # 90% confidence ellipse
theme_minimal(base_size = 8) +
theme(legend.text = element_text(size = 8),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
) +
xlab('Component 1') +
ylab('Component 2')
ggplot(pca_result, aes(x = PC1, y = PC2, color = label)) +
geom_point(size = 1.5, alpha=0.6) +
stat_ellipse(level = 0.90) +  # 90% confidence ellipse
theme_minimal(base_size = 12) +
theme(legend.text = element_text(size = 8),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
) +
xlab('Component 1') +
ylab('Component 2')
ggplot(pca_result, aes(x = PC1, y = PC2, color = label)) +
geom_point(size = 1.5, alpha=0.6) +
stat_ellipse(level = 0.90) +  # 90% confidence ellipse
theme_minimal(base_size = 12) +
theme(legend.text = element_text(size = 8),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
) +
xlab('Component 1') +
ylab('Component 2')
ggplot(pca_result, aes(x = PC1, y = PC2, color = label)) +
geom_point(size = 1.5, alpha=0.6) +
stat_ellipse(level = 0.90) +  # 90% confidence ellipse
theme_minimal(base_size = 12) +
xlab('Component 1') +
ylab('Component 2')
ggplot(pca_result, aes(x = PC1, y = PC2, color = label)) +
geom_point(size = 1.5, alpha=0.6) +
stat_ellipse(level = 0.90) +  # 90% confidence ellipse
theme_minimal() +
xlab('Component 1') +
ylab('Component 2')
pca_result
